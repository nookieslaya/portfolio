"use strict";var text=document.querySelector(".hero-title"),strText=text.textContent,splitText=strText.split(""),footerYear=document.querySelector(".footer-year"),handleCurrentYear=function(){var e=(new Date).getFullYear();footerYear.innerText=e};handleCurrentYear(),text.textContent="";for(var i=0;i<splitText.length;i++)text.innerHTML+="<span>"+splitText[i]+"</span>";var count_particles,stats,_update,_char=0,timer=setInterval(onTick,50);function onTick(){text.querySelectorAll("span")[_char].classList.add("fade"),++_char===splitText.length&&complete()}function complete(){clearInterval(timer),timer=null}sal(),particlesJS("particles-js",{particles:{number:{value:75,density:{enable:!0,value_area:800}},color:{value:"#ffffff"},shape:{type:"circle",stroke:{width:0,color:"#000000"},polygon:{nb_sides:5},image:{src:"img/github.svg",width:100,height:100}},opacity:{value:.5,random:!1,anim:{enable:!1,speed:1,opacity_min:.1,sync:!1}},size:{value:3,random:!0,anim:{enable:!1,speed:40,size_min:.1,sync:!1}},line_linked:{enable:!0,distance:150,color:"#ffffff",opacity:.4,width:1},move:{enable:!0,speed:6,direction:"none",random:!1,straight:!1,out_mode:"out",bounce:!1,attract:{enable:!1,rotateX:600,rotateY:1200}}},interactivity:{detect_on:"canvas",events:{onhover:{enable:!0,mode:"grab"},onclick:{enable:!0,mode:"push"},resize:!0},modes:{grab:{distance:140,line_linked:{opacity:1}},bubble:{distance:400,size:40,duration:2,opacity:8,speed:3},repulse:{distance:200,duration:.4},push:{particles_nb:4},remove:{particles_nb:2}}},retina_detect:!0}),(stats=new Stats).setMode(0),stats.domElement.style.position="absolute",stats.domElement.style.left="0px",stats.domElement.style.top="0px",document.body.appendChild(stats.domElement),count_particles=document.querySelector(".js-count-particles"),_update=function(){stats.begin(),stats.end(),window.pJSDom[0].pJS.particles&&window.pJSDom[0].pJS.particles.array&&(count_particles.innerText=window.pJSDom[0].pJS.particles.array.length),requestAnimationFrame(_update)},requestAnimationFrame(_update),particlesJS.load("particles-js","assets/particles.json",function(){console.log("callback - particles-js config loaded")});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
